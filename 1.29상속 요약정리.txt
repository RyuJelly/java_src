상속	- 부모클래스 변수, 메서드
	- 부모클래스 데이터형으로 변환이 가능하다.

상속 vs 연관
	- has a -> 연관
	- is a -> 상속

상속 방법
  class 자식클래스 extends 부모클래스


상속에서 생성자 관계
  자식클래스 생성 -> 자식의 생성자 -> 부모의 생성자 호출
  -> 부모객체 생성 -> 부모가 메모리 할당 -> 자식객체 생성 -> 자식 메모리 할당
 => 부모의 디폴트생성자를 호출
 => 부모의 인자가 있는 생성자를 호출 => 부모의 변수를 초기화 할 필요가 있을 때
	- super(인자값)

오버라이딩 vs 오버로딩
  - 오버로딩 : 같은 이름의 메서드, 생성자를 파라미터값의 개수와 데이터형을 통해 구분
  - 오버라이딩 : 부모클래스의 메서드를 상속하는 것이 부적합하여 다시 재정의해서 사용
	=> 부모 메서드의 시그너처(접근제어자 리턴형, 이름, 파라미터, 예외)와 일치
	=> 부모/자식 => 자식메서드 호출

형변환
  - why : 클래스 이름이 자신의 데이터 타입 - 서로 데이터 타입 불일치
  - 하나의 자료구조로 포함 할 수 없다.
  - 상소 관계의 경우 -> 부모의 데이터 타입으로 형 변환이 가능
  - 부모로 형변환 이후 -> 자신만이 가지고 있는 변수, 메서드는 더 이상 호출 할 수 없다.
  - 필요에 따라 자식 데이터로 변환 => 간제 형변환 ex) (자식클래스) 변수;
  - 자식객체가 부모객체로 생성된 경우에만 자식객체로 강제 형변환 가능
  - if(변수 instanceOf 데이터타입(클래스이름)) {	}